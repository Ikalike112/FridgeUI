@{
    ViewData["Title"] = "Home Page";
}


<a id="sp" class="btn btn-outline-primary SPButton" asp-action="CallSp">
    Fill all fridges <br>(task 6)
</a>

<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r134/three.min.js"></script>
<script src="https://cdn.rawgit.com/mrdoob/three.js/master/examples/js/loaders/GLTFLoader.js"></script>
<script src="https://cdn.jsdelivr.net/npm/three@0.132.2/examples/js/controls/OrbitControls.js"></script>
<script src="/js/FontLoader.js"></script>
<script src="/js/TextGeometry.js"></script>
<script>
    let scene, camera, renderer, textMesh;
    let text = "Fridge UI";

   
    function init() {

        scene = new THREE.Scene();
        scene.background = new THREE.Color(0xffffff);

        camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 1, 5000);
        camera.rotation.y = 45 / 180 * Math.PI;
        camera.position.x = 0;
        camera.position.y = 100;
        camera.position.z = 1000;



        hlight = new THREE.AmbientLight(0x404040, 1.2);
        scene.add(hlight);

        directionalLight = new THREE.DirectionalLight(0xffffff, 1.2);
        directionalLight.position.set(-100, 300, -1000);
        scene.add(directionalLight);
        light = new THREE.PointLight(0xc4c4c4, 0.5);
        light.position.set(-50, 200, 1000);
        scene.add(light);
        light2 = new THREE.PointLight(0xc4c4c4, 1.2);
        light2.position.set(-50, 300, -500);
        scene.add(light2);
        light3 = new THREE.PointLight(0xc4c4c4, 1.2);
        light3.position.set(-500, 100, 0);
        scene.add(light3);
        light4 = new THREE.PointLight(0xc4c4c4, 1.2);
        light4.position.set(500, 100, 0);
        scene.add(light4);
        renderer = new THREE.WebGLRenderer({ antialias: true });
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);
        window.addEventListener('resize', onWindowResize, false);


        controls = new THREE.OrbitControls(camera, renderer.domElement);
        //controls.addEventListener('change', renderer);

        let loader = new THREE.GLTFLoader();
        loader.load('../fridgemodel/scene.gltf', function (gltf) {
            fridge = gltf.scene;
            fridge.position.set(0, -100, 0);
            fridge.scale.set(1.5, 1.5, 1.5);
            scene.add(fridge);
            animate();
        },
            function (xhr) {

                console.log((xhr.loaded / xhr.total * 100) + '% loaded');

            },
            function (error) {

                console.log('An error happened');

            });

        let loadertext = new THREE.FontLoader();
        loadertext.load("../fonts/Roboto Medium_Regular.json", function (font) {
            const tGeometry = new THREE.TextGeometry(text, {
                font: font,
                size: 40,
                height: 5
            });
            textMesh = new THREE.Mesh(tGeometry, [
                new THREE.MeshPhongMaterial({ color: 0x7c7d83 }),
                new THREE.MeshPhongMaterial({ color: 0x7c7d83 })
            ]);
            textMesh.position.set(-100, 250, 0);
            scene.add(textMesh);
            });



    }
    function onWindowResize() {

        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();

        renderer.setSize(window.innerWidth, window.innerHeight);

    }
    function animate() {
        requestAnimationFrame(animate);
        renderer.render(scene, camera);
    }


    init();
</script>